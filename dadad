[1mdiff --git a/2.es6/4.proxy.js b/2.es6/4.proxy.js[m
[1mindex 5163a89..22b81b5 100644[m
[1m--- a/2.es6/4.proxy.js[m
[1m+++ b/2.es6/4.proxy.js[m
[36m@@ -18,15 +18,16 @@[m [mlet obj = {[m
 [m
 // proxy只代理当前对象,多层需要递归[m
 let handler = {[m
[31m-    get(target, key){[m
[32m+[m[32m    get(target, key) {[m
         // 如果key的值是一个对象，那递归代理这个对象[m
[31m-        if(typeof target[key] === "object"){[m
[32m+[m[32m        if (typeof target[key] === "object") {[m
             return new Proxy(target[key], handler)[m
         }[m
[31m-        return Reflect.get(target,key)[m
[32m+[m[32m        return Reflect.get(target, key)[m
     },[m
[31m-    set(target,key,value){[m
[31m-        if(key === 'length') return true[m
[32m+[m[32m    set(target, key, value) {[m
[32m+[m[32m        if (key === 'length') return true[m
[32m+[m[32m        // 将值分配给属性[m
         return Reflect.set(target, key, value)[m
     }[m
 }[m
